<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Fog</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if stayLight is zero, it means this square of FoW will be black
//if stayLight is one, it will remain lightened even when the player is far away
stayLight = 0
//if build is zero, another fog of war will appear next to it
build = 0

// if currentVision = 1, the player can move to that location
currentVision = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>build</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_Fog</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>32</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>build</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (stayLight == 0) {   // all original fog
    
    //this draws no fog (zero alpha, which makes it perfectly transparent)
    /*
    if (distance_to_object(obj_LightenParent) &lt; 32) {
        
        draw_set_alpha(0);
        draw_rectangle(x+16,y+16,x-16,y-16,false)
        draw_set_alpha(1);
        stayLight = 1;
        currentVision = 1;
        
    }
    */

    if ((((x/32)-2) == obj_Player.LineOfSight[2,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[2,1])) ||  // N
       ((((x/32)-2) == obj_Player.LineOfSight[5,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[5,1])) ||  // W
       ((((x/32)-2) == obj_Player.LineOfSight[6,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[6,1])) ||  // Self
       ((((x/32)-2) == obj_Player.LineOfSight[7,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[7,1])) ||  // E
       ((((x/32)-2) == obj_Player.LineOfSight[10,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[10,1])) { // S
        draw_set_alpha(1); // 0
        draw_rectangle(x+16,y+16,x-16,y-16,false)
        draw_set_alpha(1);
        stayLight = 1;
        currentVision = 1;
    }

    //this draws semi-transparent fog 2 squares around the player
    /*
    if (distance_to_object(obj_LightenParent) &gt;= 32 &amp;&amp; (distance_to_object(obj_LightenParent) &lt; 64)) {
        draw_set_alpha(.4); //.4, switch to 0 for debug
        draw_rectangle(x+16,y+16,x-16,y-16,false);
        draw_set_alpha(1);
        currentVision = 1;
        
    }
    */
    
    if ((((x/32)-2) == obj_Player.LineOfSight[0,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[0,1])) ||  // NN
       ((((x/32)-2) == obj_Player.LineOfSight[1,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[1,1])) ||  // NW
       ((((x/32)-2) == obj_Player.LineOfSight[3,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[3,1])) ||  // NE
       ((((x/32)-2) == obj_Player.LineOfSight[4,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[4,1])) ||  // WW
       ((((x/32)-2) == obj_Player.LineOfSight[8,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[8,1])) ||  // EE
       ((((x/32)-2) == obj_Player.LineOfSight[9,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[9,1])) ||  // SW
       ((((x/32)-2) == obj_Player.LineOfSight[11,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[11,1])) ||  // SE
       ((((x/32)-2) == obj_Player.LineOfSight[12,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[12,1])) { // SS
        draw_set_alpha(.4); // .4, switch to 0 for debug
        draw_rectangle(x+16,y+16,x-16,y-16,false)
        draw_set_alpha(1);
        stayLight = 1;
        currentVision = 1;
    }
    
    //this draws black thick fog (no alpha transparency)
    /*
    if (distance_to_object(obj_LightenParent) &gt;= 64) {
        draw_set_alpha(1); // 1, switch to 0 for debug
        draw_rectangle(x+16,y+16,x-16,y-16,false);
        draw_set_alpha(1);
        currentVision = 0;
    }  
    */

    else {
        draw_set_alpha(0); // 1, switch to 0 for debug
        draw_rectangle(x+16,y+16,x-16,y-16,false);
        draw_set_alpha(1);
        currentVision = 0;
    }

}

else { // previously explored fog (stayLight = 1)

    // this tracks the player's previous LoS
    /*
    if (distance_to_object(obj_LightenParent) &gt;= 64) {
        draw_set_alpha(.1); // .2, switch to 0 for debug
        draw_set_color(c_silver);
        draw_rectangle(x+16,y+16,x-16,y-16,false)
        draw_set_alpha(1);
        draw_set_color(c_black);
        currentVision = 0;
    }
    */
    
    // for previously explored fog tiles, if they are not in Player's LineOfSight array, set their currentVision to 0
    for (var i = 0; i &lt; array_height_2d(obj_Player.LineOfSight); i++) {
        if ((x/32)-2) == obj_Player.LineOfSight[i,0] &amp;&amp; ((y/32)-2) == obj_Player.LineOfSight[i,1] {
            break;
        }
        else {
            if (i == array_height_2d(obj_Player.LineOfSight) - 1) {
                currentVision = 0;
                draw_set_alpha(.2); // .1, switch to 0 for debug
                draw_set_color(c_silver);
                draw_rectangle(x+16,y+16,x-16,y-16,false)
                draw_set_alpha(1);
                draw_set_color(c_black);
            }
        }
    }
    
    //this draws no fog (zero alpha, which makes it perfectly transparent)
    /*
    if (distance_to_object(obj_LightenParent) &lt; 32) {
        currentVision = 1;
    }
    */
    
    if ((((x/32)-2) == obj_Player.LineOfSight[2,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[2,1])) ||  // N
       ((((x/32)-2) == obj_Player.LineOfSight[5,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[5,1])) ||  // W
       ((((x/32)-2) == obj_Player.LineOfSight[6,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[6,1])) ||  // Self
       ((((x/32)-2) == obj_Player.LineOfSight[7,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[7,1])) ||  // E
       ((((x/32)-2) == obj_Player.LineOfSight[10,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[10,1])) { // S
       currentVision = 1;
    }
    
    //this draws semi-transparent fog 2 squares around the player
    /*
    if (distance_to_object(obj_LightenParent) &gt;= 32 &amp;&amp; (distance_to_object(obj_LightenParent) &lt; 64)) {
        currentVision = 1;
    }
    */
    
    if ((((x/32)-2) == obj_Player.LineOfSight[0,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[0,1])) ||  // NN
       ((((x/32)-2) == obj_Player.LineOfSight[1,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[1,1])) ||  // NW
       ((((x/32)-2) == obj_Player.LineOfSight[3,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[3,1])) ||  // NE
       ((((x/32)-2) == obj_Player.LineOfSight[4,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[4,1])) ||  // WW
       ((((x/32)-2) == obj_Player.LineOfSight[8,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[8,1])) ||  // EE
       ((((x/32)-2) == obj_Player.LineOfSight[9,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[9,1])) ||  // SW
       ((((x/32)-2) == obj_Player.LineOfSight[11,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[11,1])) ||  // SE
       ((((x/32)-2) == obj_Player.LineOfSight[12,0]) &amp;&amp; (((y/32)-2) == obj_Player.LineOfSight[12,1])) { // SS
       currentVision = 1;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
