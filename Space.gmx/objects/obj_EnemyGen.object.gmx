<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// obj_EnemyGen is created in obj_Player.Step

randomize(); // since random() uses the default seed, 
             // enemy generation is not REALLY random without this

// Number of enemies based on Level Progression?
enemyLimit = 10 // L1-5: 10, L6-10: 15, L11-15: 20, etc

// 2D-array mirroring map size (30 x 30)
// 0 = Empty
// 1 = Occupied by Player or within Player vision
globalvar enemySpawn;

with (obj_Fog) {
    if (currentVision == 1) {
        enemySpawn[x/32, y/32] = 1;
    }
    else {
        enemySpawn[x/32, y/32] = 0;
    }
}


// place enemies in a square that is not seen by the player up to the enemyLimit
for (i = 0; i &lt; enemyLimit; i += 1) {
    // using 2D-array coordinates, (0,0) is top left and (29,29) is top right
    // this is a 30x30 array
    enemyX = irandom_range(0, 28);
    enemyY = irandom_range(0, 28);
    
    // since the full game board has a 2-cell border that is restricted, this means 
    // the coordinates enemyX and enemyY must ADD 2 in order to be within the allowable
    // playable area.
    if (enemySpawn[enemyX+2, enemyY+2] == 0) {
        // similarly, since the top-left PLAYABLE cell starts at (64, 64), enemyX and
        // enemyY must be adjusted by 2 cell-widths/heights (64 pixels) to spawn properly
        newEnemy = instance_create((enemyX*32)+64, (enemyY*32)+64, obj_E1);
        // since the playable area mp_grid starts within the 2-cell border, enemyX and
        // enemyY do not need to be changed
        mp_grid_add_cell(obj_PathController.mpGrid, enemyX, enemyY);
        ds_list_add(obj_TurnController.EnemyTurnList, newEnemy);
    }
    else {
        i -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_E1)) {

    // turn this into a script to avoid copy&amp;paste from Create event?
    with (obj_Fog) {
        if (currentVision == 1) {
            enemySpawn[x/32, y/32] = 1;
        }
        else {
            enemySpawn[x/32, y/32] = 0;
        }
    }
    
    // turn this into a script to avoid copy&amp;paste from Create event?
    // at the moment, always create ONE more enemy if all enemies are destroyed
    for (i = 0; i &lt; 1; i += 1) {
        enemyX = irandom_range(0, 28);
        enemyY = irandom_range(0, 28);
    
        if (enemySpawn[enemyX+2, enemyY+2] == 0) {
            newEnemy = instance_create((enemyX*32)+64, (enemyY*32)+64, obj_E1);
            mp_grid_add_cell(obj_PathController.mpGrid, enemyX, enemyY);
            ds_list_add(obj_TurnController.EnemyTurnList, newEnemy);
        }
        else {
            i -= 1;
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
