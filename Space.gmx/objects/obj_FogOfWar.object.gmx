<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = surface_create(room_width, room_height);
//surf = surface_create(room_width/16, room_height/16);
//surfScale = 1/16;
create = 1;
//update = 1;
//alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//update = 1;
//alarm[0] = 10;

//global left button event:

//instance_create(mouse_x, mouse_y, obj_Light);
//update = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(surf);
    
if (create == 1) {   
    draw_clear(c_black);
    create = 0;
}
    
with (obj_LoS2) {
    draw_set_blend_mode(bm_src_color);
    draw_sprite_ext(spr_LoS2, 0, x, y, lightSize, lightSize, 0, c_white, lightStrength);
    draw_set_blend_mode(bm_normal);
    
    // current fog is based on the LoS template - switch to TILE-based (2D-array) later
    if (timer == 0 &amp;&amp; !position_meeting(x, y, obj_Player.currentLoS)) {
                   //&amp;&amp; !position_meeting(x+32, y, obj_Player.currentLoS)     // 1 square right
                   //&amp;&amp; !position_meeting(x+64, y, obj_Player.currentLoS)     // 2 squares right
                   //&amp;&amp; !position_meeting(x+96, y, obj_Player.currentLoS)     // 3 squares right 
                   //&amp;&amp; !position_meeting(x+128, y, obj_Player.currentLoS)    // 4 squares right
                   
                   //&amp;&amp; !position_meeting(x-32, y, obj_Player.currentLoS)     // 1 square left
                   //&amp;&amp; !position_meeting(x-64, y, obj_Player.currentLoS)     // 2 squares left
                   //&amp;&amp; !position_meeting(x-96, y, obj_Player.currentLoS)     // 3 squares left
                   //&amp;&amp; !position_meeting(x-128, y, obj_Player.currentLoS)    // 4 squares left
                   
                   //&amp;&amp; !position_meeting(x, y+32, obj_Player.currentLoS)     // 1 square down 
                   //&amp;&amp; !position_meeting(x, y+64, obj_Player.currentLoS)     // 2 squares down 
                   //&amp;&amp; !position_meeting(x, y+96, obj_Player.currentLoS)     // 3 squares down 
                   //&amp;&amp; !position_meeting(x, y+128, obj_Player.currentLoS)    // 4 squares down 
                   
                   //&amp;&amp; !position_meeting(x, y-32, obj_Player.currentLoS)     // 1 square up 
                   //&amp;&amp; !position_meeting(x, y-64, obj_Player.currentLoS)     // 2 squares up
                   //&amp;&amp; !position_meeting(x, y-96, obj_Player.currentLoS)     // 3 squares up
                   //&amp;&amp; !position_meeting(x, y-128, obj_Player.currentLoS)) { // 4 squares up
                   
        draw_sprite_ext(spr_LoS2Dark, 0, x, y, lightSize, lightSize, 0, c_black, .9);
        instance_destroy();
    }
    else {
        timer = 1;
    }
}
        
surface_reset_target();

draw_surface(surf, 0, 0);


// draw_surface_ext(surf, 0, 0, 1, 1, 0, c_white, 1);

//if (update == 1) {
//    update = 0;

//    surface_set_target(surf);
    
//    if (create == 1) {   
//        draw_clear(c_black);
//        create = 0;
//    }
    
//    with (obj_Light) {
//        draw_set_blend_mode(bm_src_color);
//        draw_sprite_ext(spr_Light, 0, x*other.surfScale, y*other.surfScale, lightSize*other.surfScale, lightSize*other.surfScale, 0, c_white, lightStrength);
//        draw_set_blend_mode(bm_normal);
//    }
        
//    surface_reset_target();
//}

//draw_surface_ext(surf, 0, 0, 1/surfScale, 1/surfScale, 0, c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
